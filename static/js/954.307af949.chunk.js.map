{"version":3,"file":"static/js/954.307af949.chunk.js","mappings":"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","sources":["utils/utcToTime.js","pages/planPage/stopSelectorTab/StopSelector.jsx","utils/getCenterPos.js","images/icon/Map_Start.svg","component/gMap/BikeMarker.jsx","utils/getDistanceFromLatLon.js","utils/appendDistanceToRouteInfo.js","images/icon/PositionName.svg","component/HDivider.jsx","component/list/RouteListHeader.jsx","pages/planPage/stopSelectorTab/RouteSelector.jsx","images/icon/Ellipse.svg","pages/planPage/stopSelectorTab/FinishPage.jsx","pages/planPage/stopSelectorTab/StopSelectorToolbar.jsx","pages/planPage/stopSelectorTab/RouteSelectorToolbar.jsx","pages/PlanPageLayout.jsx","pages/planPage/stopSelectorTab/StopSeletorTab.jsx","images/icon/Route-1.svg","images/icon/Refresh.svg","component/list/StopListHeader.jsx","component/cards/StopInfoCard.jsx","pages/planPage/routeSelectorTab/StopSelector.jsx","pages/planPage/routeSelectorTab/RouteSelector.jsx","component/selector/DistToRouteSelector.jsx","pages/planPage/routeSelectorTab/StopSelectorToolbar.jsx","pages/planPage/routeSelectorTab/RouteSelectorTab.jsx","pages/planPage/PlanPage.jsx"],"sourcesContent":["export default function utcToTime(utc) {\n  if (!utc) return;\n  const date = new Date(utc);\n  return `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GMap from \"../../../component/gMap/GMap\";\nimport getPos from \"../../../utils/getPos\";\nimport Marker from \"../../../component/gMap/Marker\";\nimport getCenterPos from \"../../../utils/getCenterPos\";\nimport EmptyResultHint from \"../../../component/EmptyResultHint\";\nimport styled from \"styled-components\";\nimport FlexSpin from \"../../../component/FlexSpin\";\nimport utcToTime from \"../../../utils/utcToTime\";\nimport fitGMapBounds from \"../../../utils/fitGMapBounds\";\n\nconst StyledEmptyResultHint = styled(EmptyResultHint)`\n  transform: translate(-50%, -50%);\n`;\nfunction StopSelector({ stops, onSelectStop, loading, showEmptyHint }) {\n  const [map, setMap] = useState();\n  const [maps, setMaps] = useState();\n  const [selectedStop, setSelectedStop] = useState();\n  const mapCenter = useMemo(\n    () =>\n      getCenterPos(\n        stops.map(({ StationPosition: { PositionLat, PositionLon } }) => ({\n          lat: PositionLat,\n          lng: PositionLon,\n        }))\n      ),\n    [stops]\n  );\n\n  useEffect(() => {\n    // 計算可視邊界\n    fitGMapBounds(\n      map,\n      maps,\n      stops.map((stop) => getPos(stop))\n    );\n  }, [stops, map, maps]);\n\n  return (\n    <FlexSpin spinning={loading}>\n      <GMap\n        center={mapCenter}\n        onMount={(_map, _maps) => {\n          setMap(_map);\n          setMaps(_maps);\n        }}\n      >\n        {showEmptyHint ? (\n          <StyledEmptyResultHint />\n        ) : (\n          stops.map((item, id) => {\n            const { lat, lng } = getPos(item);\n            const {\n              AvailableRentBikes,\n              StationAddress,\n              StationName,\n              UpdateTime,\n            } = item;\n            const name = StationName.Zh_tw;\n            const address = StationAddress.Zh_tw;\n            return (\n              <Marker\n                key={id}\n                lat={lat}\n                lng={lng}\n                num={AvailableRentBikes}\n                avaRent={AvailableRentBikes}\n                updateTime={utcToTime(UpdateTime)}\n                name={name}\n                address={address}\n                btnText=\"選擇路線\"\n                showBtn\n                showInfoCard={selectedStop === id}\n                onClick={() => setSelectedStop(id)}\n                onCloseInfoCard={() => setSelectedStop()}\n                errHint={!AvailableRentBikes && \"目前無車輛可租用\"}\n                onClickInfoCardBtn={() =>\n                  onSelectStop({ lat, lng, name, address })\n                }\n              />\n            );\n          })\n        )}\n      </GMap>\n    </FlexSpin>\n  );\n}\n\nStopSelector.defaultProps = {\n  stops: [],\n  loading: false,\n};\nStopSelector.propTypes = {\n  stops: PropTypes.arrayOf(PropTypes.any),\n  loading: PropTypes.bool,\n};\n\nexport default StopSelector;\n","export default function getCenterPos(stops) {\n  const center = { lat: 0, lng: 0 };\n  if (stops.length === 0) return;\n  stops.forEach(({ lat, lng }) => {\n    center.lat += lat;\n    center.lng += lng;\n  });\n  center.lat = center.lat / stops.length;\n  center.lng = center.lng / stops.length;\n  return center;\n}\n","var _path, _path2, _path3, _path4, _path5;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMapStart(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 48,\n    height: 48,\n    viewBox: \"0 0 48 48\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 24C0 10.7452 10.7452 0 24 0C37.2548 0 48 10.7452 48 24C48 37.2548 37.2548 48 24 48C10.7452 48 0 37.2548 0 24Z\",\n    fill: \"#2A823C\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.6 34.4C17.5883 34.4 19.2001 32.7883 19.2001 30.8C19.2001 28.8118 17.5883 27.2001 15.6 27.2001C13.6118 27.2001 12 28.8118 12 30.8C12 32.7883 13.6118 34.4 15.6 34.4Z\",\n    stroke: \"white\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.4003 34.4C34.3886 34.4 36.0004 32.7883 36.0004 30.8C36.0004 28.8118 34.3886 27.2001 32.4003 27.2001C30.4121 27.2001 28.8003 28.8118 28.8003 30.8C28.8003 32.7883 30.4121 34.4 32.4003 34.4Z\",\n    stroke: \"white\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.0004 32V27.2L20.4004 23.6L26.4004 18.8L28.8005 22.4H32.4005\",\n    stroke: \"white\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.0003 16.4C30.6631 16.4 31.2003 15.8627 31.2003 15.2C31.2003 14.5373 30.6631 14 30.0003 14C29.3376 14 28.8003 14.5373 28.8003 15.2C28.8003 15.8627 29.3376 16.4 30.0003 16.4Z\",\n    stroke: \"white\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMapStart);\nexport default __webpack_public_path__ + \"static/media/Map_Start.f79d7fa52b6ac8fd4567eb840af03fbd.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { ReactComponent as BikeIcon } from \"../../images/icon/Map_Start.svg\";\nimport RouteStopIcon from \"./RouteStopIcon\";\n\nfunction BikeMarker(props) {\n  return <RouteStopIcon {...props} icon={<BikeIcon />} />;\n}\n\nBikeMarker.propTypes = {};\n\nexport default BikeMarker;\n","function deg2rad(deg) {\n  return deg * (Math.PI / 180);\n}\n\nexport default function getDistanceFromLatLon(geometry1, geometry2) {\n    const {lat: lat1, lng: lng1} = geometry1;\n    const {lat: lat2, lng: lng2} = geometry2;\n  var R = 6371; // Radius of the earth in km\n  var dLat = deg2rad(lat2 - lat1); // deg2rad below\n  var dLon = deg2rad(lng2 - lng1);\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) *\n      Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c; // Distance in km\n  return d;\n}\n","import directionEnum from \"../constant/directionEnum\";\nimport getDistanceFromLatLon from \"./getDistanceFromLatLon\";\n\nexport default function appendDistanceToRouteInfo(curPos, routeInfos) {\n  return routeInfos.map((route) => {\n    const stopPos = { lat: curPos.lat, lng: curPos.lng };\n    let dist;\n    if (route.Direction === directionEnum.unidirection) {\n      dist = getDistanceFromLatLon(route.Geometry[0], stopPos);\n    } else if (route.Direction === directionEnum.bilateral) {\n      dist = Math.min(\n        getDistanceFromLatLon(route.Geometry[0], stopPos),\n        getDistanceFromLatLon(\n          route.Geometry[route.Geometry.length - 1],\n          stopPos\n        )\n      );\n    } else {\n      console.error(\"路線的方向資訊非預期\");\n    }\n    return {\n      ...route,\n      Distance: (Math.round(dist * 100) / 100).toFixed(2),\n    };\n  });\n}\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPositionName(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 13C13.6569 13 15 11.6569 15 10C15 8.34315 13.6569 7 12 7C10.3431 7 9 8.34315 9 10C9 11.6569 10.3431 13 12 13Z\",\n    stroke: \"#424242\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 2C9.87827 2 7.84344 2.84285 6.34315 4.34315C4.84285 5.84344 4 7.87827 4 10C4 11.892 4.402 13.13 5.5 14.5L12 22L18.5 14.5C19.598 13.13 20 11.892 20 10C20 7.87827 19.1571 5.84344 17.6569 4.34315C16.1566 2.84285 14.1217 2 12 2V2Z\",\n    stroke: \"#424242\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPositionName);\nexport default __webpack_public_path__ + \"static/media/PositionName.9069db6f18a4e41b9aff55fbd8c01743.svg\";\nexport { ForwardRef as ReactComponent };","// import React from \"react\";\n// import PropTypes from \"prop-types\";\n\nimport styled from \"styled-components\";\n\nexport default styled.div`\n  border-top: 1px solid #bdbdbd;\n  margin: 16px 0;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FlexBox from \"../FlexBox\";\nimport { ReactComponent as PositionIcon } from \"../../images/icon/PositionName.svg\";\nimport styled from \"styled-components\";\nimport styleParams from \"../../constant/styleParams\";\nimport BlodBlockText from \"../texts/BlodBlockText\";\nimport HDivider from \"../HDivider\";\n\nconst Title = styled(FlexBox)`\n  & > *:not(:last-child) {\n    margin-right: 12px;\n  }\n`;\n\nconst Content = styled.span`\n  color: ${styleParams.grayText};\n  font-size: 16px;\n`;\n\nfunction RouteListHeader({ stopName, extraNode, routeNum }) {\n  return (\n    <FlexBox noShrink>\n      <FlexBox flex row align=\"center\" justify=\"space-between\">\n        <Title row>\n          <PositionIcon />\n          <BlodBlockText>{stopName}</BlodBlockText>\n        </Title>\n        {extraNode}\n      </FlexBox>\n      <HDivider />\n      <Content>共{routeNum}條路線</Content>\n    </FlexBox>\n  );\n}\n\nRouteListHeader.defaultProps = {\n  stopName: \"\",\n  extraNode: undefined,\n  routeNum: undefined,\n};\nRouteListHeader.propTypes = {\n  stopName: PropTypes.string,\n  extraNode: PropTypes.node,\n  routeNum: PropTypes.number,\n};\n\nexport default RouteListHeader;\n","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GMap from \"../../../component/gMap/GMap\";\nimport useGetRoute from \"../../../hooks/useGetRoute\";\nimport styled from \"styled-components\";\nimport EmptyResultHint from \"../../../component/EmptyResultHint\";\nimport BikeMarker from \"../../../component/gMap/BikeMarker\";\nimport appendDistanceToRouteInfo from \"../../../utils/appendDistanceToRouteInfo\";\nimport Button from \"../../../component/Button\";\nimport fitGMapBounds from \"../../../utils/fitGMapBounds\";\nimport RouteListHeader from \"../../../component/list/RouteListHeader\";\nimport RouteInfoCard from \"../../../component/cards/RouteInfoCard\";\nimport { stopCityMaptoRouteCity } from \"../../../constant/cityList\";\nimport SwitchableMainContentLayout from \"../../../component/SwitchableMainContentLayout\";\nimport useRWD from \"../../../hooks/useRWD\";\nimport screenEnum from \"../../../constant/screenEnum\";\nimport useGetFilteredRouteInfo from \"../../../hooks/useGetFilteredRouteInfo\";\nimport SelectableRouteMarks from \"../../../component/gMap/SelectableRouteMarks\";\nimport ListContainer from \"../../../component/list/ListContainer\";\n\nconst StyledEmptyResultHint = styled(EmptyResultHint)`\n  transform: translate(-50%, -50%);\n`;\n\nconst StyleLink = styled(Button)`\n  color: #df9300;\n\n  &:hover {\n    color: #df9300;\n  }\n`;\n\nfunction RouteSelector({\n  city,\n  stopInfo,\n  onSelectRoute,\n  onClickReturn,\n  routeLen,\n  searchKey,\n  dirFilter,\n}) {\n  const {\n    getRoute,\n    isLoading: gettingRoute,\n    data: routeInfos,\n  } = useGetRoute([]);\n\n  const [map, setMap] = useState();\n  const [maps, setMaps] = useState();\n  const [selectedRoute, setSelectedRoute] = useState([]);\n  const [selectedRouteId, setSelectedRouteId] = useState();\n  const [sortBy] = useState(\"distance\");\n  const refEle = useRef({ list: [] });\n  const { screen } = useRWD();\n\n  useEffect(() => {\n    getRoute(\n      stopCityMaptoRouteCity(city),\n      (routes) => {\n        const infos = appendDistanceToRouteInfo(stopInfo, routes);\n        infos.sort((a, b) => a.CyclingLength - b.CyclingLength);\n        return infos;\n      },\n      searchKey,\n      routeLen\n    );\n  }, [getRoute, city, stopInfo, searchKey, routeLen]);\n\n  const { filteredRouteInfos, routeStartStops } = useGetFilteredRouteInfo(\n    dirFilter,\n    routeInfos\n  );\n\n  useEffect(() => {\n    setSelectedRoute([]);\n    setSelectedRouteId();\n  }, [city, stopInfo, searchKey, routeLen, dirFilter]);\n\n  useEffect(() => {\n    fitGMapBounds(map, maps, routeStartStops);\n  }, [routeStartStops, map, maps]);\n\n  const handleSelectRoute = useCallback((map, maps, geometry, id) => {\n    setSelectedRoute(geometry);\n    fitGMapBounds(map, maps, geometry);\n    setSelectedRouteId(id);\n  }, []);\n\n  return (\n    <SwitchableMainContentLayout\n      switchMode={screen <= screenEnum.md}\n      loading={gettingRoute}\n      leftContent={\n        <>\n          <RouteListHeader\n            routeNum={filteredRouteInfos.length}\n            stopName={stopInfo.name}\n            extraNode={\n              <StyleLink type=\"link\" onClick={onClickReturn}>\n                重新選擇站點\n              </StyleLink>\n            }\n          />\n          <ListContainer\n            data={filteredRouteInfos\n              .sort((a, b) => a[sortBy] - b[sortBy])\n              .map(\n                (\n                  {\n                    RouteName,\n                    CyclingLength,\n                    RoadSectionStart,\n                    RoadSectionEnd,\n                    Geometry,\n                    Direction,\n                    Distance,\n                  },\n                  id\n                ) => {\n                  return (\n                    <div\n                      key={RouteName}\n                      ref={(ele) => (refEle.current.list[id] = ele)}\n                    >\n                      <RouteInfoCard\n                        checked={selectedRouteId === id}\n                        title={RouteName}\n                        distance={Distance}\n                        direction={Direction}\n                        length={CyclingLength}\n                        start={RoadSectionStart}\n                        end={RoadSectionEnd}\n                        onClickBtn={() =>\n                          onSelectRoute({\n                            name: RouteName,\n                            start: RoadSectionStart,\n                            end: RoadSectionEnd,\n                            length: CyclingLength,\n                            direction: Direction,\n                            geometry: Geometry,\n                          })\n                        }\n                        onClick={() =>\n                          handleSelectRoute(map, maps, Geometry, id)\n                        }\n                      />\n                    </div>\n                  );\n                }\n              )}\n          />\n        </>\n      }\n      rightContent={\n        <GMap\n          steps={selectedRoute}\n          onMount={(_map, _maps) => {\n            setMap(_map);\n            setMaps(_maps);\n          }}\n        >\n          {filteredRouteInfos.length === 0 && !gettingRoute && (\n            <StyledEmptyResultHint specificStr=\"路線\" />\n          )}\n          <BikeMarker lat={stopInfo.lat} lng={stopInfo.lng} />\n          {SelectableRouteMarks({\n            selectedRoute,\n            allRouteStartStops: routeStartStops,\n            onClickRouteMark: (id) => {\n              handleSelectRoute(map, maps, filteredRouteInfos[id].Geometry, id);\n              refEle.current.list[id].scrollIntoView({ behavior: \"smooth\" });\n            },\n          })}\n        </GMap>\n      }\n    />\n  );\n}\n\nRouteSelector.defaultProps = {\n  city: undefined,\n  stopInfo: {},\n  onSelectRoute: () => {},\n  onClickReturn: () => {},\n  routeLen: undefined,\n  searchKey: \"\",\n  dirFilter: [],\n};\nRouteSelector.propTypes = {\n  city: PropTypes.string,\n  stopInfo: PropTypes.objectOf(PropTypes.any),\n  onSelectRoute: PropTypes.func,\n  onClickReturn: PropTypes.func,\n  routeLen: PropTypes.string,\n  searchKey: PropTypes.string,\n  dirFilter: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default RouteSelector;\n","var _circle;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEllipse(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 9,\n    cy: 9,\n    r: 8,\n    fill: \"white\",\n    stroke: \"#E0E0E0\",\n    strokeWidth: 2\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEllipse);\nexport default __webpack_public_path__ + \"static/media/Ellipse.d3f0765b44029238f27a5e4d4f800016.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FlexBox from \"../../../component/FlexBox\";\nimport GMap from \"../../../component/gMap/GMap\";\nimport { Steps } from \"antd\";\nimport styled from \"styled-components\";\nimport BikeMarker from \"../../../component/gMap/BikeMarker\";\nimport useRWD from \"../../../hooks/useRWD\";\nimport BlodBlockText from \"../../../component/texts/BlodBlockText\";\nimport Card from \"../../../component/cards/Card\";\nimport HDivider from \"../../../component/HDivider\";\nimport StateLabel from \"../../../component/StateLabel\";\nimport styleParams from \"../../../constant/styleParams\";\nimport { ReactComponent as Ellipse } from \"../../../images/icon/Ellipse.svg\";\nimport fitGMapBounds from \"../../../utils/fitGMapBounds\";\nimport RouteStartMarker from \"../../../component/gMap/RouteStartMark\";\nimport RouteEndMarker from \"../../../component/gMap/RouteEndMark\";\nimport SwitchableMainContentLayout from \"../../../component/SwitchableMainContentLayout\";\nimport screenEnum from \"../../../constant/screenEnum\";\nimport Button from \"../../../component/Button\";\n\nconst Description = styled(BlodBlockText)`\n  margin-bottom: 16px;\n`;\n\nconst Label = styled.div`\n  color: #757575;\n  margin-bottom: 8px;\n  font-size: 16px;\n`;\n\nconst AddressWrapper = styled.div`\n  margin: 8px 0 16px;\n  color: ${styleParams.text};\n  font-weight: 400;\n`;\n\nconst StepText = styled.span`\n  font-size: 16;\n  font-weight: 400;\n  color: ${styleParams.text};\n`;\n\nconst LenInfoWrapper = styled(FlexBox)`\n  font-size: 14px;\n  color: #757575;\n\n  & > *:not(:last-child) {\n    margin-right: 12px;\n  }\n`;\n\nconst LenInfo = styled.span`\n  font-size: 16px;\n  font-weight: 700;\n  color ${styleParams.grayText};\n`;\n\nconst RouteInfoWrapper = styled(FlexBox)`\n  & > :not(:last-child) {\n    margin-right: 16px;\n  }\n`;\n\nconst StyledSteps = styled(Steps)`\n  margin: 16px 0 8px;\n  & > .ant-steps-item > .ant-steps-item-container > .ant-steps-item-tail {\n    padding: 0;\n    top: 14px;\n    left: 15px;\n\n    &:after {\n      width: 3px;\n    }\n  }\n`;\n\nconst StyleLink = styled(Button)`\n  color: #df9300;\n\n  &:hover {\n    color: #df9300;\n  }\n`;\n\nfunction FinishPage({\n  stopInfo,\n  routeInfo: {\n    name: routeName,\n    start,\n    end,\n    length: routeLen,\n    direction,\n    geometry,\n  },\n}) {\n  const { screen } = useRWD();\n\n  const [map, setMap] = useState();\n  const [maps, setMaps] = useState();\n\n  useEffect(() => {\n    const { lat, lng } = stopInfo;\n    fitGMapBounds(map, maps, [...geometry, { lat, lng }]);\n  }, [geometry, stopInfo, map, maps]);\n\n  return (\n    <SwitchableMainContentLayout\n      switchMode={screen <= screenEnum.md}\n      hideBtn\n      leftContent={\n        <>\n          <Description>規劃完成，您的挑戰資訊如下</Description>\n          <Card>\n            <Label>挑戰名稱</Label>\n            <BlodBlockText>{routeName}</BlodBlockText>\n            <HDivider />\n            <FlexBox row flex justify=\"space-between\" align=\"center\">\n              <FlexBox>\n                <Label>起點資訊</Label>\n                <BlodBlockText>{stopInfo.name}</BlodBlockText>\n                <AddressWrapper>{stopInfo.address}</AddressWrapper>\n              </FlexBox>\n              <StyleLink\n                type=\"link\"\n                target=\"_blank\"\n                href={`https://www.google.com/maps/dir/?api=1&destination=${stopInfo.lat},${stopInfo.lng}`}\n              >\n                導航至起點\n              </StyleLink>\n            </FlexBox>\n            <Label>路線資訊</Label>\n            <RouteInfoWrapper row align=\"center\">\n              <BlodBlockText>{routeName}</BlodBlockText>\n              <StateLabel label={direction} />\n            </RouteInfoWrapper>\n            <StyledSteps direction=\"vertical\">\n              <Steps.Step\n                icon={<Ellipse />}\n                title={<StepText> {start}</StepText>}\n                status=\"wait\"\n              />\n              <Steps.Step\n                icon={<Ellipse />}\n                title={<StepText>{end}</StepText>}\n              />\n            </StyledSteps>\n            <LenInfoWrapper row align=\"center\">\n              <span>總長</span> <LenInfo>{routeLen}公里</LenInfo>\n            </LenInfoWrapper>\n          </Card>\n        </>\n      }\n      rightContent={\n        <GMap\n          steps={geometry}\n          onMount={(_map, _maps) => {\n            setMap(_map);\n            setMaps(_maps);\n          }}\n        >\n          <BikeMarker lat={stopInfo.lat} lng={stopInfo.lng} />\n          {[\n            { ...geometry[0], Component: RouteStartMarker },\n            { ...geometry[geometry.length - 1], Component: RouteEndMarker },\n          ].map(({ lat, lng, Component }, id) => (\n            <Component lat={lat} lng={lng} key={id} />\n          ))}\n        </GMap>\n      }\n    />\n  );\n}\n\nFinishPage.defaultProps = {\n  stopInfo: {},\n  routeInfo: {},\n};\nFinishPage.propTypes = {\n  stopInfo: PropTypes.objectOf(PropTypes.any),\n  routeInfo: PropTypes.objectOf(PropTypes.any),\n};\n\nexport default FinishPage;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport FlexBox from \"../../../component/FlexBox\";\nimport CityYoubikeSelector from \"../../../component/selector/CityYoubikeSelector\";\nimport Search from \"../../../component/Search\";\nimport styled from \"styled-components\";\n\nconst StyledSearch = styled(Search)`\n  margin-left: 8px;\n`;\n\nfunction StopSelectorToolbar({\n  city,\n  onCityChange,\n  onYoubikeChange,\n  youbikeVer,\n  onSearch,\n  onSearchChange,\n  searchKey,\n}) {\n  return (\n    <FlexBox row justify=\"space-between\" flex align=\"center\">\n      <CityYoubikeSelector\n        cityVal={city}\n        onCityChange={onCityChange}\n        onYoubikeChange={onYoubikeChange}\n        youbikeVal={youbikeVer}\n      />\n      <StyledSearch\n        value={searchKey}\n        placeholder=\"站點搜尋\"\n        onPressEnter={onSearch}\n        onChange={onSearchChange}\n      />\n    </FlexBox>\n  );\n}\n\nStopSelectorToolbar.propTypes = {};\n\nexport default StopSelectorToolbar;\n","import React, { useMemo } from \"react\";\n// import PropTypes from \"prop-types\";\nimport FlexBox from \"../../../component/FlexBox\";\nimport DistanceSelector from \"../../../component/selector/DistanceSelector\";\nimport CheckboxGroup from \"../../../component/CheckboxGroup\";\nimport Search from \"../../../component/Search\";\nimport Divider from \"../../../component/toolbar/Divider\";\nimport { directionList } from \"../../../constant/directionEnum\";\n\nfunction RouteSelectorToolbar({\n  routeLen,\n  onRouteChange,\n  onDireactChange,\n  onSearch,\n  onSearchChange,\n  searchKey,\n  render,\n}) {\n  const selectors = useMemo(\n    () => (\n      <FlexBox row align=\"center\">\n        <DistanceSelector\n          placeholder=\"車道長度\"\n          value={routeLen}\n          onSelect={onRouteChange}\n          prefixStr=\"車道長度： \"\n          filterName=\"CyclingLength\"\n        />\n        <Divider />\n        <CheckboxGroup options={directionList} onChange={onDireactChange} />\n      </FlexBox>\n    ),\n    [routeLen, onRouteChange, onDireactChange]\n  );\n\n  const search = useMemo(\n    () => (\n      <Search\n      onChange={onSearchChange}\n        value={searchKey}\n        placeholder=\"路線 / 起、迄點搜尋\"\n        onPressEnter={onSearch}\n      />\n    ),\n    [onSearch, searchKey, onSearchChange]\n  );\n  return render ? (\n    render(selectors, search)\n  ) : (\n    <FlexBox flex row justify=\"space-between\" align=\"center\">\n      {selectors}\n      {search}\n    </FlexBox>\n  );\n}\n\nRouteSelectorToolbar.propTypes = {};\n\nexport default RouteSelectorToolbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Toolbar from \"../component/toolbar/Toolbar\";\nimport ModeSelector from \"./planPage/ModeSelector\";\nimport CollapsibleToolbarLayout from \"../component/toolbar/CollapsibleToolbarLayout\";\n\nfunction PlanPageLayout({\n  onModeChange,\n  toolbarComponent,\n  secondToolbar,\n  offsetTop,\n  mainComponent,\n  curMode,\n}) {\n  return (\n    <CollapsibleToolbarLayout\n      toolbar={\n        <>\n          <Toolbar>\n            <ModeSelector value={curMode} onChange={onModeChange} />\n            {toolbarComponent}\n          </Toolbar>\n          {secondToolbar}\n        </>\n      }\n      content={mainComponent}\n      contentOffset={offsetTop}\n    />\n  );\n}\n\nPlanPageLayout.defaultProps = {\n  onModeChange: () => {},\n  toolbarComponent: null,\n  secondToolbar: null,\n  offsetTop: 0,\n  mainComponent: null,\n  curMode: undefined,\n};\n\nPlanPageLayout.propTypes = {\n  onModeChange: PropTypes.func,\n  toolbarComponent: PropTypes.node,\n  secondToolbar: PropTypes.node,\n  offsetTop: PropTypes.number,\n  mainComponent: PropTypes.node,\n  curMode: PropTypes.string,\n};\n\nexport default PlanPageLayout;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StopSelector from \"./StopSelector\";\nimport RouteSelector from \"./RouteSelector\";\nimport FinishPage from \"./FinishPage\";\nimport cityList from \"../../../constant/cityList\";\nimport youbikeList from \"../../../constant/youbikeList\";\nimport useGetBikeStopInfo from \"../../../hooks/useGetBikeStopInfo\";\nimport useRWD from \"../../../hooks/useRWD\";\nimport screenEnum from \"../../../constant/screenEnum\";\nimport StopSelectorToolbar from \"./StopSelectorToolbar\";\nimport Divider from \"../../../component/toolbar/Divider\";\nimport RouteSelectorToolbar from \"./RouteSelectorToolbar\";\nimport styleParams from \"../../../constant/styleParams\";\nimport PlanPageLayout from \"../../PlanPageLayout\";\nimport SubToolbar from \"../../../component/toolbar/SubToolbar\";\n\nexport default function StopSeletorTab({ onModeChange, curTabMode }) {\n  const [curMode, setCurMode] = useState(\"stop\");\n  const [city, setCity] = useState(cityList[0].value);\n  const [youbikeVer, setYoubikeVer] = useState(youbikeList[0].value);\n  const [stopInfo, setStopInfo] = useState({});\n  const [routeInfo, setRouteInfo] = useState({});\n  const [searchStop, setSearchStop] = useState(\"\");\n  const [searchRoute, setSearchRoute] = useState(\"\");\n  const [searchStopVal, setSearchStopVal] = useState(\"\");\n  const [searchRouteVal, setSearchRouteVal] = useState(\"\");\n  const [routeLen, setRouteLen] = useState();\n  const [notFoundStop, setNotFoundStop] = useState(false);\n  const [dirFilter, setDirFilter] = useState([]);\n  // const history = useHistory();\n  // const { lat, log } = queryString.parse(history.location.search);\n  const { getBikeStopInfo, data, loading } = useGetBikeStopInfo([]);\n  const { screen } = useRWD();\n\n  useEffect(() => {\n    getBikeStopInfo({\n      city,\n      youbikeVer,\n      search: searchStop,\n      noSearchResultCB: (flag) => setNotFoundStop(flag),\n    });\n  }, [getBikeStopInfo, city, youbikeVer, searchStop]);\n\n  const { component, toolbarComponent, secondToolbar, offsetTop } =\n    useMemo(() => {\n      const screenGatherThanLg = screen >= screenEnum.lg;\n      const screenGatherThanXl = screen >= screenEnum.xl;\n      const screenGatherThanMd = screen >= screenEnum.md;\n      const { secondToolbarHeight: subToolbarH } = styleParams;\n\n      let component = null;\n      let toolbarComponent = null;\n      let secondToolbar = null;\n      let offsetTop = 0;\n      switch (curMode) {\n        case \"stop\":\n          component = (\n            <StopSelector\n              stops={data}\n              city={city}\n              loading={loading}\n              showEmptyHint={notFoundStop}\n              onSelectStop={(data) => {\n                setStopInfo(data);\n                setCurMode(\"route\");\n              }}\n            />\n          );\n          toolbarComponent = screenGatherThanLg && (\n            <>\n              <Divider />\n              <StopSelectorToolbar\n                city={city}\n                searchKey={searchStopVal}\n                onCityChange={setCity}\n                onYoubikeChange={setYoubikeVer}\n                youbikeVer={youbikeVer}\n                onSearch={setSearchStop}\n                onSearchChange={setSearchStopVal}\n              />\n            </>\n          );\n          secondToolbar = !screenGatherThanLg && (\n            <SubToolbar>\n              <StopSelectorToolbar\n                city={city}\n                onCityChange={setCity}\n                searchKey={searchStopVal}\n                onYoubikeChange={setYoubikeVer}\n                youbikeVer={youbikeVer}\n                onSearch={setSearchStop}\n                onSearchChange={setSearchStopVal}\n              />\n            </SubToolbar>\n          );\n          offsetTop = screenGatherThanLg ? 0 : subToolbarH;\n          break;\n        case \"route\":\n          component = (\n            <RouteSelector\n              city={city}\n              stopInfo={stopInfo}\n              routeLen={routeLen}\n              searchKey={searchRoute}\n              dirFilter={dirFilter}\n              onClickReturn={() => setCurMode(\"stop\")}\n              onSelectRoute={(data) => {\n                setRouteInfo(data);\n                setCurMode(\"finish\");\n              }}\n            />\n          );\n          toolbarComponent = screenGatherThanXl && (\n            <>\n              <Divider />\n              <RouteSelectorToolbar\n                routeLen={routeLen}\n                onRouteChange={setRouteLen}\n                onDireactChange={setDirFilter}\n                onSearch={setSearchRoute}\n                onSearchChange={setSearchRouteVal}\n                searchKey={searchRouteVal}\n              />\n            </>\n          );\n          secondToolbar = !screenGatherThanXl && (\n            <RouteSelectorToolbar\n              routeLen={routeLen}\n              onRouteChange={setRouteLen}\n              onDireactChange={setDirFilter}\n              onSearch={setSearchRoute}\n              onSearchChange={setSearchRouteVal}\n              searchKey={searchRouteVal}\n              render={(selectors, search) =>\n                screenGatherThanMd ? (\n                  <SubToolbar>\n                    {selectors}\n                    {search}\n                  </SubToolbar>\n                ) : (\n                  <>\n                    <SubToolbar>{selectors}</SubToolbar>\n                    <SubToolbar>{search}</SubToolbar>\n                  </>\n                )\n              }\n            />\n          );\n          offsetTop = screenGatherThanXl\n            ? 0\n            : screenGatherThanMd\n            ? subToolbarH\n            : subToolbarH * 2;\n          break;\n        case \"finish\":\n          component = <FinishPage stopInfo={stopInfo} routeInfo={routeInfo} />;\n          break;\n        default:\n      }\n      return {\n        component,\n        toolbarComponent,\n        secondToolbar,\n        offsetTop,\n      };\n    }, [\n      curMode,\n      data,\n      city,\n      stopInfo,\n      routeInfo,\n      notFoundStop,\n      loading,\n      youbikeVer,\n      routeLen,\n      searchRoute,\n      dirFilter,\n      screen,\n      searchStopVal,\n      searchRouteVal,\n    ]);\n\n  return (\n    <PlanPageLayout\n      onModeChange={onModeChange}\n      curMode={curTabMode}\n      toolbarComponent={toolbarComponent}\n      secondToolbar={secondToolbar}\n      offsetTop={offsetTop}\n      mainComponent={component}\n    />\n  );\n}\n\nStopSelector.defaultProps = { onModeChange: () => {}, curTabMode: undefined };\nStopSelector.propTypes = {\n  onModeChange: PropTypes.func,\n  curTabMode: PropTypes.string,\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoute1(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.75 15.75C18.0851 15.7513 17.4393 15.9727 16.9135 16.3798C16.3877 16.7868 16.0115 17.3566 15.8438 18H6.75C5.95435 18 5.19129 17.6839 4.62868 17.1213C4.06607 16.5587 3.75 15.7956 3.75 15C3.75 14.2044 4.06607 13.4413 4.62868 12.8787C5.19129 12.3161 5.95435 12 6.75 12H15.75C16.7446 12 17.6984 11.6049 18.4017 10.9017C19.1049 10.1984 19.5 9.24456 19.5 8.25C19.5 7.25544 19.1049 6.30161 18.4017 5.59835C17.6984 4.89509 16.7446 4.5 15.75 4.5H6.75C6.55109 4.5 6.36032 4.57902 6.21967 4.71967C6.07902 4.86032 6 5.05109 6 5.25C6 5.44891 6.07902 5.63968 6.21967 5.78033C6.36032 5.92098 6.55109 6 6.75 6H15.75C16.3467 6 16.919 6.23705 17.341 6.65901C17.7629 7.08097 18 7.65326 18 8.25C18 8.84674 17.7629 9.41903 17.341 9.84099C16.919 10.2629 16.3467 10.5 15.75 10.5H6.75C5.55653 10.5 4.41193 10.9741 3.56802 11.818C2.72411 12.6619 2.25 13.8065 2.25 15C2.25 16.1935 2.72411 17.3381 3.56802 18.182C4.41193 19.0259 5.55653 19.5 6.75 19.5H15.8438C15.984 20.0432 16.2738 20.5362 16.6802 20.923C17.0866 21.3098 17.5933 21.5749 18.1427 21.6882C18.6922 21.8015 19.2625 21.7584 19.7887 21.5639C20.3149 21.3694 20.7761 21.0312 21.1197 20.5877C21.4634 20.1443 21.6758 19.6133 21.7329 19.0552C21.79 18.4971 21.6894 17.9341 21.4426 17.4303C21.1958 16.9265 20.8127 16.5019 20.3367 16.2049C19.8608 15.9079 19.311 15.7503 18.75 15.75ZM18.75 20.25C18.4533 20.25 18.1633 20.162 17.9166 19.9972C17.67 19.8324 17.4777 19.5981 17.3642 19.324C17.2507 19.0499 17.2209 18.7483 17.2788 18.4574C17.3367 18.1664 17.4796 17.8991 17.6893 17.6893C17.8991 17.4796 18.1664 17.3367 18.4574 17.2788C18.7483 17.2209 19.0499 17.2506 19.324 17.3642C19.5981 17.4777 19.8324 17.67 19.9972 17.9166C20.162 18.1633 20.25 18.4533 20.25 18.75C20.25 19.1478 20.092 19.5294 19.8107 19.8107C19.5294 20.092 19.1478 20.25 18.75 20.25Z\",\n    fill: \"#424242\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoute1);\nexport default __webpack_public_path__ + \"static/media/Route-1.192a15c8bc62d46011dc3cbefdf6ef0d.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRefresh(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 16,\n    viewBox: \"0 0 22 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 4L14 8H17C17 11.31 14.31 14 11 14C9.99 14 9.03 13.75 8.2 13.3L6.74 14.76C7.97 15.54 9.43 16 11 16C15.42 16 19 12.42 19 8H22L18 4ZM5 8C5 4.69 7.69 2 11 2C12.01 2 12.97 2.25 13.8 2.7L15.26 1.24C14.03 0.46 12.57 0 11 0C6.58 0 3 3.58 3 8H0L4 12L8 8H5Z\",\n    fill: \"#616161\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRefresh);\nexport default __webpack_public_path__ + \"static/media/Refresh.ec32179234b362e364c3536772aede64.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FlexBox from \"../FlexBox\";\nimport BlodBlockText from \"../texts/BlodBlockText\";\nimport HDivider from \"../HDivider\";\nimport StartEndStopInfo from \"../StartEndStopInfo\";\nimport { ReactComponent as Route } from \"../../images/icon/Route-1.svg\";\nimport { ReactComponent as Refresh } from \"../../images/icon/Refresh.svg\";\nimport Button from \"../Button\";\nimport styled from \"styled-components\";\n\nconst StyleLink = styled(Button)`\n  color: #df9300;\n  display: flex;\n  padding-top: 0;\n  align-items: center;\n\n  &:hover {\n    color: #df9300;\n  }\n`;\n\nconst StyledStartEndStopInfo = styled(StartEndStopInfo)`\n  margin-top: 18px;\n`;\n\nconst StyledRoute = styled(Route)`\n  margin-right: 12px;\n`;\n\nconst UpdateTimeWrapper = styled(({ show, ...rest }) => <FlexBox {...rest} />)`\n  color: #757575;\n  font-size: 12px;\n  cursor: pointer;\n  visibility: ${({ show }) => (show ? \"visible\" : \"hidden\")};\n\n  & > :not(:last-child) {\n    margin-right: 12px;\n  }\n`;\n\nfunction StopListHeader({\n  routeName,\n  start,\n  end,\n  direction,\n  stopNum,\n  updateTime,\n  onClickReselect,\n  onClickUpdateTime,\n}) {\n  return (\n    <FlexBox noShrink>\n      <FlexBox row>\n        <StyledRoute />\n        <FlexBox flex>\n          <FlexBox flex row justify=\"space-between\">\n            <BlodBlockText>{routeName}</BlodBlockText>\n            <StyleLink type=\"link\" onClick={onClickReselect}>\n              重新選擇路線\n            </StyleLink>\n          </FlexBox>\n          <StyledStartEndStopInfo\n            start={start}\n            end={end}\n            direction={direction}\n          />\n        </FlexBox>\n      </FlexBox>\n      <HDivider />\n      <FlexBox flex row justify=\"space-between\">\n        <span>共 {stopNum} 個站點</span>\n        <UpdateTimeWrapper\n          show={Boolean(updateTime)}\n          onClick={onClickUpdateTime}\n          row\n          align=\"center\"\n        >\n          <span>更新時間 {updateTime}</span>\n          <Refresh />\n        </UpdateTimeWrapper>\n      </FlexBox>\n    </FlexBox>\n  );\n}\n\nStopListHeader.defaultProps = {\n  onClickReselect: () => {},\n  onClickUpdateTime: () => {},\n};\nStopListHeader.propTypes = {\n  onClickReselect: PropTypes.func,\n  onClickUpdateTime: PropTypes.func,\n};\n\nexport default StopListHeader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../Button\";\n// import PropTypes from \"prop-types\";\nimport InfoCard from \"./InfoCard\";\n\nconst LengthWrapper = styled.div`\n  color: #9e9e9e;\n  margin-top: 8px;\n  font-size: 14px;\n`;\n\nconst StyledBtn = styled(Button)`\n  padding: 12px 32px;\n  font-size: 16px;\n  margin-top: 16px;\n  width: 128px;\n`;\n\nconst AddressWrapper = styled.div`\n  margin-top: 8px;\n  font-size: 16px;\n`;\n\nfunction StopInfoCard({\n  title,\n  onClick,\n  onClickBtn,\n  checked,\n  address,\n  distance,\n}) {\n  return (\n    <InfoCard\n      title={title}\n      // btnName=\"選擇站點\"\n      //   onClickBtn={onClickBtn}\n      onClick={onClick}\n      hideBtn\n      checked={checked}\n      content={\n        <>\n          <AddressWrapper>{address}</AddressWrapper>\n          <LengthWrapper>\n            距離 {(Math.round(distance * 100) / 100).toFixed(2)} 公里\n          </LengthWrapper>\n          <StyledBtn onClick={onClickBtn}>選擇站點</StyledBtn>\n        </>\n      }\n    />\n  );\n}\n\nStopInfoCard.propTypes = {};\n\nexport default StopInfoCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport getPos from \"../../../utils/getPos\";\nimport GMap from \"../../../component/gMap/GMap\";\nimport useGetBikeStopInfo from \"../../../hooks/useGetBikeStopInfo\";\nimport directionEnum from \"../../../constant/directionEnum\";\nimport Marker from \"../../../component/gMap/Marker\";\nimport EmptyResultHint from \"../../../component/EmptyResultHint\";\nimport styled from \"styled-components\";\nimport SwitchableMainContentLayout from \"../../../component/SwitchableMainContentLayout\";\nimport StopListHeader from \"../../../component/list/StopListHeader\";\nimport StopInfoCard from \"../../../component/cards/StopInfoCard\";\nimport ListContainer from \"../../../component/list/ListContainer\";\nimport getDistanceFromLatLon from \"../../../utils/getDistanceFromLatLon\";\nimport utcToTime from \"../../../utils/utcToTime\";\nimport RouteStartMarker from \"../../../component/gMap/RouteStartMark\";\nimport RouteEndMarker from \"../../../component/gMap/RouteEndMark\";\nimport fitGMapBounds from \"../../../utils/fitGMapBounds\";\nimport useRWD from \"../../../hooks/useRWD\";\nimport screenEnum from \"../../../constant/screenEnum\";\n\nconst StyledEmptyResultHint = styled(EmptyResultHint)`\n  transform: translate(-50%, -50%);\n`;\nfunction StopSelector({\n  city,\n  routeInfos,\n  onClickReturn,\n  onSelectStop,\n  searchKey,\n  youbikeVer,\n  distance,\n}) {\n  const { getBikeStopInfo, loading } = useGetBikeStopInfo();\n  const [stops, setStops] = useState([]);\n  const [showNoDataHint, setShowNoDataHint] = useState(false);\n  const [selectedStop, setSelectedStop] = useState();\n  const [refresh, setRefresh] = useState(false);\n  const [map, setMap] = useState();\n  const [maps, setMaps] = useState();\n  const { screen } = useRWD();\n  const refEle = useRef({ list: [] });\n\n  const {\n    start: startStop,\n    end: endStop,\n    name: routeName,\n    direction,\n    geometry,\n  } = routeInfos;\n\n  useEffect(() => {\n    const { direction, geometry } = routeInfos;\n    const apiRequestConfig = { city, search: searchKey, youbikeVer, distance };\n    const addDistanceToStops = (stops, position) =>\n      stops.map((item) => {\n        const { PositionLat, PositionLon } = item.StationPosition;\n        return {\n          ...item,\n          Distance: getDistanceFromLatLon(position, {\n            lat: PositionLat,\n            lng: PositionLon,\n          }),\n        };\n      });\n    if (direction === directionEnum.unidirection) {\n      // 單車道起站位置\n      const { lat, lng } = geometry[0];\n      getBikeStopInfo({\n        lat,\n        lng,\n        noSearchResultCB: () => setShowNoDataHint(true),\n        ...apiRequestConfig,\n      }).then((resp) => {\n        setStops(addDistanceToStops(resp, geometry[0]));\n        setShowNoDataHint(false);\n      });\n    } else if (direction === directionEnum.bilateral) {\n      // 單車道起站位置\n      const { lat: startLat, lng: startLng } = geometry[0];\n      // 單車道末站位置\n      const { lat: endLat, lng: endLng } = geometry[geometry.length - 1];\n      Promise.all([\n        getBikeStopInfo({\n          lat: startLat,\n          lng: startLng,\n          ...apiRequestConfig,\n        }),\n        getBikeStopInfo({\n          lat: endLat,\n          lng: endLng,\n          ...apiRequestConfig,\n        }),\n      ]).then((values) => {\n        const [startStops, endStops] = values;\n        setShowNoDataHint(startStops.length === 0 && endStops.length === 0);\n        const resultArr = addDistanceToStops(startStops, geometry[0]);\n        endStops.forEach((item) => {\n          if (\n            !resultArr\n              .map(({ StationUID }) => StationUID)\n              .includes(item.StationUID)\n          ) {\n            resultArr.push(\n              addDistanceToStops([item], geometry[geometry.length - 1])[0]\n            );\n          }\n        });\n\n        setStops(resultArr);\n      });\n    } else {\n      console.error(\"非預期的單車道方線資訊\");\n    }\n  }, [\n    getBikeStopInfo,\n    routeInfos,\n    city,\n    searchKey,\n    refresh,\n    youbikeVer,\n    distance,\n  ]);\n\n  useEffect(() => {\n    fitGMapBounds(map, maps, [\n      geometry[0],\n      geometry[geometry.length - 1],\n      ...stops.map(({ StationPosition: { PositionLon, PositionLat } }) => ({\n        lat: PositionLat,\n        lng: PositionLon,\n      })),\n    ]);\n  }, [stops, geometry, map, maps, distance]);\n\n  useEffect(() => {\n    setSelectedStop();\n  }, [city, youbikeVer, distance]);\n\n  return (\n    <SwitchableMainContentLayout\n      loading={loading}\n      switchMode={screen <= screenEnum.md}\n      leftContent={\n        <>\n          <StopListHeader\n            routeName={routeName}\n            stopNum={stops.length}\n            start={startStop}\n            end={endStop}\n            updateTime={utcToTime(stops?.[0]?.UpdateTime)}\n            onClickReselect={onClickReturn}\n            onClickUpdateTime={() => setRefresh(!refresh)}\n            direction={direction}\n          />\n          <ListContainer\n          emptyText='沒有尋找到相關站點'\n            data={stops.map(\n              (\n                { StationName, StationAddress, Distance, StationPosition },\n                id\n              ) => (\n                <div key={id} ref={(ele) => (refEle.current.list[id] = ele)}>\n                  <StopInfoCard\n                    title={StationName.Zh_tw}\n                    address={StationAddress.Zh_tw}\n                    distance={Distance}\n                    onClick={() => setSelectedStop(id)}\n                    checked={selectedStop === id}\n                    onClickBtn={() =>\n                      onSelectStop({\n                        lat: StationPosition.PositionLat,\n                        lng: StationPosition.PositionLon,\n                        name: StationName.Zh_tw,\n                        address: StationAddress.Zh_tw,\n                      })\n                    }\n                  />\n                </div>\n              )\n            )}\n          />\n        </>\n      }\n      rightContent={\n        <GMap\n          onMount={(_map, _maps) => {\n            setMap(_map);\n            setMaps(_maps);\n          }}\n          steps={geometry}\n        >\n          {showNoDataHint ? (\n            <StyledEmptyResultHint />\n          ) : (\n            [\n              <RouteStartMarker\n                key=\"start\"\n                lat={geometry[0].lat}\n                lng={geometry[0].lng}\n              />,\n              <RouteEndMarker\n                key=\"end\"\n                lat={geometry[geometry.length - 1].lat}\n                lng={geometry[geometry.length - 1].lng}\n              />,\n            ].concat(\n              stops\n                .map((item, id) => {\n                  const { lat, lng } = getPos(item);\n                  const {\n                    AvailableRentBikes,\n                    AvailableReturnBikes,\n                    StationAddress,\n                    StationName,\n                  } = item;\n                  const name = StationName.Zh_tw;\n                  const address = StationAddress.Zh_tw;\n                  return (\n                    <Marker\n                      key={id}\n                      lat={lat}\n                      lng={lng}\n                      num={AvailableRentBikes}\n                      avaRent={AvailableRentBikes}\n                      avaReturn={AvailableReturnBikes}\n                      name={name}\n                      onClick={() => {\n                        if (selectedStop === undefined) {\n                          setSelectedStop(id);\n                          refEle.current.list[id].scrollIntoView({\n                            behavior: \"smooth\",\n                          });\n                        }\n                      }}\n                      btnText=\"選擇站點\"\n                      showBtn\n                      showAvaInfo\n                      address={address}\n                      onClickInfoCardBtn={() =>\n                        onSelectStop({ lat, lng, name, address })\n                      }\n                    />\n                  );\n                })\n                .filter((item, id) =>\n                  selectedStop === undefined ? true : selectedStop === id\n                )\n            )\n          )}\n        </GMap>\n      }\n    />\n  );\n}\n\nStopSelector.defaultProps = { onClickReturn: () => {}, onSelectStop: () => {} };\nStopSelector.propTypes = {\n  onClickReturn: PropTypes.func,\n  onSelectStop: PropTypes.func,\n};\n\nexport default StopSelector;\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GMap from \"../../../component/gMap/GMap\";\nimport SwitchableMainContentLayout from \"../../../component/SwitchableMainContentLayout\";\nimport fitGMapBounds from \"../../../utils/fitGMapBounds\";\nimport useGetFilteredRouteInfo from \"../../../hooks/useGetFilteredRouteInfo\";\nimport SelectableRouteMarks from \"../../../component/gMap/SelectableRouteMarks\";\nimport useRWD from \"../../../hooks/useRWD\";\nimport screenEnum from \"../../../constant/screenEnum\";\nimport RouteInfoListGroup from \"../../../component/custom/RouteInfoListGroup\";\n\nfunction RouteSelector({\n  routeInfos,\n  onSelectRoute,\n  loading,\n  dirFilter,\n  city,\n  routeLen,\n  searchRoute,\n}) {\n  const [map, setMap] = useState();\n  const [maps, setMaps] = useState();\n  const [selectedRoute, setSelectedRoute] = useState([]);\n  const [selectedRouteId, setSelectedRouteId] = useState();\n  const refEle = useRef({ list: [] });\n  const { screen } = useRWD();\n\n  const { filteredRouteInfos, routeStartStops } = useGetFilteredRouteInfo(\n    dirFilter,\n    routeInfos\n  );\n\n  const handleSelectRoute = useCallback((map, maps, geometry, id) => {\n    setSelectedRoute(geometry);\n    fitGMapBounds(map, maps, geometry);\n    setSelectedRouteId(id);\n  }, []);\n\n  useEffect(() => {\n    fitGMapBounds(map, maps, routeStartStops);\n  }, [routeStartStops, map, maps]);\n\n  useEffect(() => {\n    setSelectedRoute([]);\n    setSelectedRouteId();\n  }, [dirFilter, city, routeLen, searchRoute]);\n\n  return (\n    <SwitchableMainContentLayout\n      loading={loading}\n      switchMode={screen <= screenEnum.md}\n      leftContent={\n        <RouteInfoListGroup\n          routInfos={filteredRouteInfos}\n          refEle={refEle}\n          selectedRouteId={selectedRouteId}\n          onClickCard={(Geometry, id) =>\n            handleSelectRoute(map, maps, Geometry, id)\n          }\n          onClickCardBtn={(infos) => onSelectRoute(infos)}\n        />\n      }\n      rightContent={\n        <GMap\n          steps={selectedRoute}\n          onMount={(map, maps) => {\n            setMap(map);\n            setMaps(maps);\n          }}\n        >\n          {SelectableRouteMarks({\n            selectedRoute: selectedRoute,\n            allRouteStartStops: routeStartStops,\n            onClickRouteMark: (id) => {\n              handleSelectRoute(map, maps, filteredRouteInfos[id].Geometry, id);\n              refEle.current.list[id].scrollIntoView({ behavior: \"smooth\" });\n            },\n          })}\n        </GMap>\n      }\n    />\n  );\n}\n\nRouteSelector.propTypes = {\n  city: \"\",\n  routeInfos: [],\n  onSelectCity: () => {},\n  onSelectRoute: () => {},\n  onSearch: () => {},\n  dirFilter: [],\n  searchStop: \"\",\n};\nRouteSelector.propTypes = {\n  city: PropTypes.string,\n  routeInfos: PropTypes.arrayOf(PropTypes.any),\n  onSelectCity: PropTypes.func,\n  onSelectRoute: PropTypes.func,\n  onSearch: PropTypes.func,\n  dirFilter: PropTypes.arrayOf(PropTypes.string),\n  searchStop: PropTypes.string,\n};\n\nexport default RouteSelector;\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Select from \"./Select\";\nimport AntSelect from \"antd/lib/select\";\n\nfunction DistToRouteSelector({ value, onSelect, prefixStr, ...rest }) {\n  const { Option } = AntSelect;\n  const options = useMemo(\n    () => [\n      { value: \"\", label: \"不拘\" },\n      { value: \"100\", label: \"100公尺以內\" },\n      {\n        value: \"200\",\n        label: \"200公尺以內\",\n      },\n      {\n        value: \"500\",\n        label: \"500公尺以內\",\n      },\n      { value: \"1000\", label: \"1公里以內\" },\n    ],\n    []\n  );\n  return (\n    <Select value={value} onSelect={onSelect} placeholder='與路線距離' optionLabelProp=\"label\" {...rest}>\n      {options.map(({ value, label }) => (\n        <Option key={value} value={value} label={`${prefixStr}${label}`}>\n          {label}\n        </Option>\n      ))}\n    </Select>\n  );\n}\n\nDistToRouteSelector.propTypes = {\n  value: undefined,\n  onSelect: () => {},\n  prefixStr: \"\",\n};\nDistToRouteSelector.propTypes = {\n  value: PropTypes.string,\n  onSelect: PropTypes.func,\n  prefixStr: PropTypes.string,\n};\n\nexport default DistToRouteSelector;\n","import React, { useMemo } from \"react\";\n// import PropTypes from \"prop-types\";\nimport Divider from \"../../../component/toolbar/Divider\";\nimport CityYoubikeSelector from \"../../../component/selector/CityYoubikeSelector\";\nimport FlexBox from \"../../../component/FlexBox\";\nimport Search from \"../../../component/Search\";\nimport styled from \"styled-components\";\nimport DistToRouteSelector from \"../../../component/selector/DistToRouteSelector\";\n\nconst StyledSelect = styled(DistToRouteSelector)`\n  margin-right: 8px;\n`;\n\nfunction StopSelectorToolbar({\n  city,\n  onCityChange,\n  youbikeVer,\n  distance,\n  onYoubikeChange,\n  onDistanceChange,\n  onSearch,\n  onSearchChange,\n  searchKey,\n  render,\n}) {\n  const cityYoubikeSelect = useMemo(\n    () => (\n      <CityYoubikeSelector\n        cityVal={city}\n        onCityChange={onCityChange}\n        youbikeVal={youbikeVer}\n        onYoubikeChange={onYoubikeChange}\n      />\n    ),\n    [city, onCityChange, youbikeVer, onYoubikeChange]\n  );\n\n  const distanceSelect = useMemo(\n    () => (\n      <StyledSelect\n        value={distance}\n        onSelect={onDistanceChange}\n        prefixStr=\"與路線距離：\"\n      />\n    ),\n    [distance, onDistanceChange]\n  );\n  const search = useMemo(\n    () => (\n      <Search\n        value={searchKey}\n        placeholder=\"站點搜尋\"\n        onPressEnter={onSearch}\n        onChange={onSearchChange}\n      />\n    ),\n    [onSearch, onSearchChange, searchKey]\n  );\n\n  const wholeComponent = useMemo(\n    () => (\n      <FlexBox justify=\"space-between\" row flex>\n        <FlexBox row>\n          {cityYoubikeSelect}\n          <Divider />\n          {distanceSelect}\n        </FlexBox>\n        {search}\n      </FlexBox>\n    ),\n    [cityYoubikeSelect, distanceSelect, search]\n  );\n\n  return render\n    ? render(wholeComponent, cityYoubikeSelect, distanceSelect, search)\n    : wholeComponent;\n}\n\nStopSelectorToolbar.propTypes = {};\n\nexport default StopSelectorToolbar;\n","import React, { useEffect, useMemo, useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport queryString from \"query-string\";\nimport useGetRoute from \"../../../hooks/useGetRoute\";\nimport cityList from \"../../../constant/cityList\";\nimport StopSelector from \"./StopSelector\";\nimport RouteSelector from \"./RouteSelector\";\nimport FinishPage from \"../stopSelectorTab/FinishPage\";\nimport { useHistory } from \"react-router\";\nimport appendDistanceToRouteInfo from \"../../../utils/appendDistanceToRouteInfo\";\nimport PlanPageLayout from \"../../PlanPageLayout\";\nimport RouteSelectorToolbar from \"../../../component/custom/RouteSelectorToolbar\";\nimport useRWD from \"../../../hooks/useRWD\";\nimport screenEnum from \"../../../constant/screenEnum\";\nimport styleParams from \"../../../constant/styleParams\";\nimport FlexBox from \"../../../component/FlexBox\";\nimport StopSelectorToolbar from \"./StopSelectorToolbar\";\nimport youbikeList from \"../../../constant/youbikeList\";\nimport Divider from \"../../../component/toolbar/Divider\";\nimport { getDefaultYoubikeVerByCity } from \"../../../component/selector/CityYoubikeSelector\";\nimport SubToolbar from \"../../../component/toolbar/SubToolbar\";\n\nfunction RouteSelectorTab({ onModeChange, curTabMode }) {\n  const [curMode, setCurMode] = useState(\"route\");\n  const history = useHistory();\n  const { lat, log } = queryString.parse(history.location.search);\n  const [routeCity, setRouteCity] = useState(cityList[0].value);\n  const [stopCity, setStopCity] = useState(cityList[0].value);\n  const [routeLen, setRouteLen] = useState();\n  const [stopInfo, setStopInfo] = useState({});\n  const [routeInfo, setRouteInfo] = useState({});\n  const [dirFilter, setDirFilter] = useState([]);\n  const [searchRoute, setSearchRoute] = useState();\n  const [searchStop, setSearchStop] = useState();\n  const [searchRouteVal, setSearchRouteVal] = useState();\n  const [searchStopVal, setSearchStopVal] = useState();\n  const [distance, setDistance] = useState();\n  const [youbikeVer, setYoubikeVer] = useState(youbikeList[0].value);\n  const { getRoute, data, isLoading } = useGetRoute([]);\n  const { screen } = useRWD();\n\n  useEffect(() => {\n    getRoute(\n      routeCity,\n      (routes) => appendDistanceToRouteInfo({ lat, lng: log }, routes),\n      searchRoute,\n      routeLen\n    );\n  }, [getRoute, routeCity, lat, log, searchRoute, routeLen]);\n\n  const { component, toolbarComponent, secondToolbar, offsetTop } =\n    useMemo(() => {\n      const screenGatherThanXl = screen >= screenEnum.xl;\n      const screenGatherThanMd = screen >= screenEnum.md;\n      const { secondToolbarHeight: subToolbarH } = styleParams;\n\n      let component = null;\n      let toolbarComponent = null;\n      let secondToolbar = null;\n      let offsetTop = 0;\n\n      const StopToolbar = (render) => (\n        <StopSelectorToolbar\n          city={stopCity}\n          onCityChange={setStopCity}\n          distance={distance}\n          youbikeVer={youbikeVer}\n          onYoubikeChange={setYoubikeVer}\n          onSearch={setSearchStop}\n          onSearchChange={setSearchStopVal}\n          onDistanceChange={setDistance}\n          searchKey={searchStopVal}\n          render={render}\n        />\n      );\n\n      const RouteToolbar = (render) => (\n        <RouteSelectorToolbar\n          city={routeCity}\n          routeLen={routeLen}\n          onCityChange={(val) => {\n            setRouteCity(val);\n            setStopCity(val);\n            setYoubikeVer(getDefaultYoubikeVerByCity(val));\n          }}\n          onRouteLenChange={setRouteLen}\n          onDireactChange={setDirFilter}\n          onSearch={setSearchRoute}\n          onSearchChange={setSearchRouteVal}\n          searchKey={searchRouteVal}\n          render={render}\n        />\n      );\n\n      switch (curMode) {\n        case \"stop\":\n          component = (\n            <StopSelector\n              city={stopCity}\n              youbikeVer={youbikeVer}\n              routeInfos={routeInfo}\n              searchKey={searchStop}\n              distance={distance}\n              onSelectCity={setStopCity}\n              onClickReturn={() => setCurMode(\"route\")}\n              onSelectStop={(data) => {\n                setStopInfo(data);\n                setCurMode(\"finish\");\n              }}\n            />\n          );\n          toolbarComponent = screenGatherThanXl && (\n            <>\n              <Divider />\n              {StopToolbar()}\n            </>\n          );\n          secondToolbar =\n            !screenGatherThanXl &&\n            StopToolbar((whole, cityYoubikeSelect, distanceSelect, search) =>\n              screenGatherThanMd ? (\n                <SubToolbar>{whole}</SubToolbar>\n              ) : (\n                <>\n                  <SubToolbar>{cityYoubikeSelect}</SubToolbar>\n                  <SubToolbar>\n                    <FlexBox noShrink flex row justify=\"space-between\">\n                      {distanceSelect}\n                      {search}\n                    </FlexBox>\n                  </SubToolbar>\n                </>\n              )\n            );\n          offsetTop = screenGatherThanXl\n            ? 0\n            : screenGatherThanMd\n            ? subToolbarH\n            : subToolbarH * 2;\n          break;\n        case \"route\":\n          component = (\n            <RouteSelector\n              city={routeCity}\n              routeLen={routeLen}\n              dirFilter={dirFilter}\n              onSelectCity={setRouteCity}\n              searchRoute={searchRoute}\n              routeInfos={data}\n              loading={isLoading}\n              onSelectRoute={(route) => {\n                setRouteInfo(route);\n                setCurMode(\"stop\");\n              }}\n              onSearch={(keyword) =>\n                getRoute(routeCity, (resp) => resp, keyword)\n              }\n            />\n          );\n          toolbarComponent = screenGatherThanXl && RouteToolbar();\n          secondToolbar =\n            !screenGatherThanXl &&\n            RouteToolbar((whole, selectors, checkboxGroup, search) =>\n              screenGatherThanMd ? (\n                <SubToolbar>{whole}</SubToolbar>\n              ) : (\n                <>\n                  <SubToolbar>{selectors}</SubToolbar>\n                  <SubToolbar>\n                    <FlexBox row flex align=\"center\" justify=\"space-between\">\n                      {checkboxGroup}\n                      {search}\n                    </FlexBox>\n                  </SubToolbar>\n                </>\n              )\n            );\n          offsetTop = screenGatherThanXl\n            ? 0\n            : screenGatherThanMd\n            ? subToolbarH\n            : subToolbarH * 2;\n          break;\n        case \"finish\":\n          component = <FinishPage stopInfo={stopInfo} routeInfo={routeInfo} />;\n          break;\n        default:\n      }\n      return { component, toolbarComponent, secondToolbar, offsetTop };\n    }, [\n      curMode,\n      data,\n      routeCity,\n      stopInfo,\n      routeInfo,\n      getRoute,\n      isLoading,\n      routeLen,\n      dirFilter,\n      screen,\n      youbikeVer,\n      searchStop,\n      stopCity,\n      distance,\n      searchRouteVal, \n      searchStopVal,\n      searchRoute\n    ]);\n\n  return (\n    <PlanPageLayout\n      curMode={curTabMode}\n      onModeChange={onModeChange}\n      mainComponent={component}\n      toolbarComponent={toolbarComponent}\n      secondToolbar={secondToolbar}\n      offsetTop={offsetTop}\n    />\n  );\n}\n\nRouteSelectorTab.propTypes = {};\n\nexport default RouteSelectorTab;\n","import React, { useMemo, useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport StopSelectorTab from \"./stopSelectorTab/StopSeletorTab\";\nimport RouteSelectorTab from \"./routeSelectorTab/RouteSelectorTab\";\nimport PageContainer from \"../../component/PageContainer\";\n\nfunction PlanPage(props) {\n  const [curMode, setCurMode] = useState(\"stop\");\n\n  const mainBlock = useMemo(() => {\n    let component = null;\n    switch (curMode) {\n      case \"stop\":\n        component = (\n          <StopSelectorTab curTabMode=\"stop\" onModeChange={setCurMode} />\n        );\n        break;\n      case \"route\":\n        component = (\n          <RouteSelectorTab curTabMode=\"route\" onModeChange={setCurMode} />\n        );\n        break;\n      default:\n        break;\n    }\n    return component;\n  }, [curMode]);\n\n  return <PageContainer>{mainBlock}</PageContainer>;\n}\n\nPlanPage.propTypes = {};\n\nexport default PlanPage;\n"],"names":["utcToTime","utc","date","Date","getHours","getMinutes","getSeconds","StyledEmptyResultHint","styled","EmptyResultHint","StopSelector","stops","onSelectStop","loading","showEmptyHint","useState","map","setMap","maps","setMaps","selectedStop","setSelectedStop","mapCenter","useMemo","center","lat","lng","length","forEach","getCenterPos","StationPosition","PositionLat","PositionLon","useEffect","fitGMapBounds","stop","getPos","FlexSpin","spinning","GMap","onMount","_map","_maps","item","id","AvailableRentBikes","StationAddress","StationName","UpdateTime","name","Zh_tw","address","Marker","num","avaRent","updateTime","btnText","showBtn","showInfoCard","onClick","onCloseInfoCard","errHint","onClickInfoCardBtn","defaultProps","_path","_path2","_path3","_path4","_path5","_excluded","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMapStart","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","RouteStopIcon","icon","deg2rad","deg","Math","PI","getDistanceFromLatLon","geometry1","geometry2","lat1","lng1","lat2","lng2","dLat","dLon","a","sin","cos","atan2","sqrt","appendDistanceToRouteInfo","curPos","routeInfos","route","dist","stopPos","Direction","directionEnum","Geometry","min","console","error","Distance","round","toFixed","SvgPositionName","Title","FlexBox","Content","styleParams","RouteListHeader","stopName","extraNode","routeNum","noShrink","flex","row","align","justify","BlodBlockText","HDivider","undefined","StyleLink","Button","RouteSelector","city","stopInfo","onSelectRoute","onClickReturn","routeLen","searchKey","dirFilter","useGetRoute","getRoute","gettingRoute","isLoading","data","selectedRoute","setSelectedRoute","selectedRouteId","setSelectedRouteId","sortBy","refEle","useRef","list","screen","useRWD","stopCityMaptoRouteCity","routes","infos","sort","b","CyclingLength","useGetFilteredRouteInfo","filteredRouteInfos","routeStartStops","handleSelectRoute","useCallback","geometry","SwitchableMainContentLayout","switchMode","screenEnum","leftContent","type","ListContainer","RouteName","RoadSectionStart","RoadSectionEnd","ele","current","RouteInfoCard","checked","distance","direction","start","end","onClickBtn","rightContent","steps","specificStr","SelectableRouteMarks","allRouteStartStops","onClickRouteMark","scrollIntoView","behavior","_circle","SvgEllipse","cx","cy","r","Description","Label","AddressWrapper","StepText","LenInfoWrapper","LenInfo","RouteInfoWrapper","StyledSteps","Steps","FinishPage","routeInfo","routeName","hideBtn","Card","href","StateLabel","label","Step","status","Component","RouteStartMarker","RouteEndMarker","StyledSearch","Search","onCityChange","onYoubikeChange","youbikeVer","onSearch","onSearchChange","CityYoubikeSelector","cityVal","youbikeVal","value","placeholder","onPressEnter","onChange","onRouteChange","onDireactChange","render","selectors","DistanceSelector","onSelect","prefixStr","filterName","Divider","CheckboxGroup","options","directionList","search","PlanPageLayout","onModeChange","toolbarComponent","secondToolbar","offsetTop","mainComponent","curMode","CollapsibleToolbarLayout","toolbar","Toolbar","ModeSelector","content","contentOffset","StopSeletorTab","curTabMode","setCurMode","cityList","setCity","youbikeList","setYoubikeVer","setStopInfo","setRouteInfo","searchStop","setSearchStop","searchRoute","setSearchRoute","searchStopVal","setSearchStopVal","searchRouteVal","setSearchRouteVal","setRouteLen","notFoundStop","setNotFoundStop","setDirFilter","useGetBikeStopInfo","getBikeStopInfo","noSearchResultCB","flag","screenGatherThanLg","screenGatherThanXl","screenGatherThanMd","subToolbarH","component","SubToolbar","PropTypes","SvgRoute1","SvgRefresh","StyledStartEndStopInfo","StartEndStopInfo","StyledRoute","Route","UpdateTimeWrapper","show","rest","StopListHeader","stopNum","onClickReselect","onClickUpdateTime","Boolean","LengthWrapper","StyledBtn","InfoCard","setStops","showNoDataHint","setShowNoDataHint","refresh","setRefresh","startStop","endStop","apiRequestConfig","addDistanceToStops","position","then","resp","startLat","startLng","endLat","endLng","Promise","all","values","startStops","endStops","resultArr","StationUID","includes","push","emptyText","RouteStartMark","RouteEndMark","concat","AvailableReturnBikes","avaReturn","showAvaInfo","filter","RouteInfoListGroup","routInfos","onClickCard","onClickCardBtn","Option","AntSelect","Select","optionLabelProp","StyledSelect","DistToRouteSelector","StopSelectorToolbar","onDistanceChange","cityYoubikeSelect","distanceSelect","wholeComponent","propTypes","history","useHistory","queryString","location","log","routeCity","setRouteCity","stopCity","setStopCity","setDistance","StopToolbar","RouteToolbar","val","getDefaultYoubikeVerByCity","onRouteLenChange","onSelectCity","whole","keyword","checkboxGroup","mainBlock","PageContainer"],"sourceRoot":""}